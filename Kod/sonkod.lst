CCS PCM C Compiler, Version 4.014, 35284               06-May-14 21:30

               Filename: D:\Çalýþmalarým\Minisumo\sonkod\sonkod.lst

               ROM used: 605 words (7%)
                         Largest free fragment is 2048
               RAM used: 12 (3%) at main() level
                         13 (4%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0A5
0003:  NOP
.................... #include <16F877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOBROWNOUT                 //Reset when brownout detected 
.................... #FUSES NOLVP                      //Low Voltage Programming on B3(PIC16) or B5(PIC18) 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOCPD 
....................  
....................  
.................... #use delay(clock=20000000) 
0004:  MOVLW  26
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETLW  00
....................  
....................  void dur(){ 
....................    output_low(pin_c0); 
0018:  BCF    20.0
0019:  MOVF   20,W
001A:  BSF    03.5
001B:  MOVWF  07
001C:  BCF    03.5
001D:  BCF    07.0
*
00AE:  MOVLW  FF
00AF:  BCF    03.5
00B0:  MOVWF  20
....................    output_low(pin_c3); 
*
001E:  BCF    20.3
001F:  MOVF   20,W
0020:  BSF    03.5
0021:  MOVWF  07
0022:  BCF    03.5
0023:  BCF    07.3
....................    output_low(pin_c5); 
0024:  BCF    20.5
0025:  MOVF   20,W
0026:  BSF    03.5
0027:  MOVWF  07
0028:  BCF    03.5
0029:  BCF    07.5
....................    output_low(pin_d2); 
002A:  BSF    03.5
002B:  BCF    08.2
002C:  BCF    03.5
002D:  BCF    08.2
....................    output_low(pin_c2); 
002E:  BCF    20.2
002F:  MOVF   20,W
0030:  BSF    03.5
0031:  MOVWF  07
0032:  BCF    03.5
0033:  BCF    07.2
....................    output_low(pin_d1); 
0034:  BSF    03.5
0035:  BCF    08.1
0036:  BCF    03.5
0037:  BCF    08.1
....................    output_low(pin_c7); 
0038:  BCF    20.7
0039:  MOVF   20,W
003A:  BSF    03.5
003B:  MOVWF  07
003C:  BCF    03.5
003D:  BCF    07.7
....................    output_low(pin_c4); 
003E:  BCF    20.4
003F:  MOVF   20,W
0040:  BSF    03.5
0041:  MOVWF  07
0042:  BCF    03.5
0043:  BCF    07.4
....................  } 
0044:  RETLW  00
....................  void ileri(){ 
....................     dur(); 
0045:  CALL   018
....................     output_high(pin_c0); 
0046:  BCF    20.0
0047:  MOVF   20,W
0048:  BSF    03.5
0049:  MOVWF  07
004A:  BCF    03.5
004B:  BSF    07.0
....................     output_high(pin_c3); 
004C:  BCF    20.3
004D:  MOVF   20,W
004E:  BSF    03.5
004F:  MOVWF  07
0050:  BCF    03.5
0051:  BSF    07.3
....................     output_high(pin_c5); 
0052:  BCF    20.5
0053:  MOVF   20,W
0054:  BSF    03.5
0055:  MOVWF  07
0056:  BCF    03.5
0057:  BSF    07.5
....................     output_high(pin_d2); 
0058:  BSF    03.5
0059:  BCF    08.2
005A:  BCF    03.5
005B:  BSF    08.2
....................  } 
005C:  RETLW  00
....................   void geri(){ 
....................    dur(); 
005D:  CALL   018
....................    output_high(pin_c4); 
005E:  BCF    20.4
005F:  MOVF   20,W
0060:  BSF    03.5
0061:  MOVWF  07
0062:  BCF    03.5
0063:  BSF    07.4
....................    output_high(pin_c2); 
0064:  BCF    20.2
0065:  MOVF   20,W
0066:  BSF    03.5
0067:  MOVWF  07
0068:  BCF    03.5
0069:  BSF    07.2
....................    output_high(pin_c7); 
006A:  BCF    20.7
006B:  MOVF   20,W
006C:  BSF    03.5
006D:  MOVWF  07
006E:  BCF    03.5
006F:  BSF    07.7
....................    output_high(pin_d1); 
0070:  BSF    03.5
0071:  BCF    08.1
0072:  BCF    03.5
0073:  BSF    08.1
....................   } 
0074:  RETLW  00
....................     void sag(){ 
....................     dur(); 
0075:  CALL   018
....................    output_high(pin_c4); 
0076:  BCF    20.4
0077:  MOVF   20,W
0078:  BSF    03.5
0079:  MOVWF  07
007A:  BCF    03.5
007B:  BSF    07.4
....................    output_high(pin_c7); 
007C:  BCF    20.7
007D:  MOVF   20,W
007E:  BSF    03.5
007F:  MOVWF  07
0080:  BCF    03.5
0081:  BSF    07.7
....................    output_high(pin_c0); 
0082:  BCF    20.0
0083:  MOVF   20,W
0084:  BSF    03.5
0085:  MOVWF  07
0086:  BCF    03.5
0087:  BSF    07.0
....................    output_high(pin_c3); 
0088:  BCF    20.3
0089:  MOVF   20,W
008A:  BSF    03.5
008B:  MOVWF  07
008C:  BCF    03.5
008D:  BSF    07.3
....................     } 
008E:  RETLW  00
....................     void sol(){ 
....................     dur(); 
008F:  CALL   018
....................    output_high(pin_c2); 
0090:  BCF    20.2
0091:  MOVF   20,W
0092:  BSF    03.5
0093:  MOVWF  07
0094:  BCF    03.5
0095:  BSF    07.2
....................    output_high(pin_d1); 
0096:  BSF    03.5
0097:  BCF    08.1
0098:  BCF    03.5
0099:  BSF    08.1
....................    output_high(pin_c5); 
009A:  BCF    20.5
009B:  MOVF   20,W
009C:  BSF    03.5
009D:  MOVWF  07
009E:  BCF    03.5
009F:  BSF    07.5
....................    output_high(pin_d2); 
00A0:  BSF    03.5
00A1:  BCF    08.2
00A2:  BCF    03.5
00A3:  BSF    08.2
....................       } 
00A4:  RETLW  00
.................... int8 on,sa,so,x; 
....................  
.................... void main() 
.................... { 
00A5:  CLRF   04
00A6:  BCF    03.7
00A7:  MOVLW  1F
00A8:  ANDWF  03,F
00A9:  BSF    03.5
00AA:  BSF    1F.0
00AB:  BSF    1F.1
00AC:  BSF    1F.2
00AD:  BCF    1F.3
....................  
.................... output_high(pin_d3); 
*
00B1:  BSF    03.5
00B2:  BCF    08.3
00B3:  BCF    03.5
00B4:  BSF    08.3
.................... output_high(pin_c6); 
00B5:  BCF    20.6
00B6:  MOVF   20,W
00B7:  BSF    03.5
00B8:  MOVWF  07
00B9:  BCF    03.5
00BA:  BSF    07.6
.................... output_high(pin_d0); 
00BB:  BSF    03.5
00BC:  BCF    08.0
00BD:  BCF    03.5
00BE:  BSF    08.0
.................... output_high(pin_c1); 
00BF:  BCF    20.1
00C0:  MOVF   20,W
00C1:  BSF    03.5
00C2:  MOVWF  07
00C3:  BCF    03.5
00C4:  BSF    07.1
....................  
.................... output_high(pin_e0); 
00C5:  BSF    03.5
00C6:  BCF    09.0
00C7:  BCF    03.5
00C8:  BSF    09.0
....................  
....................  
.................... setup_adc_ports(AN0_AN1_AN2_AN3_AN4); 
00C9:  BSF    03.5
00CA:  BCF    1F.0
00CB:  BSF    1F.1
00CC:  BCF    1F.2
00CD:  BCF    1F.3
.................... setup_adc(ADC_CLOCK_DIV_32); 
00CE:  BCF    03.5
00CF:  BCF    1F.6
00D0:  BSF    1F.7
00D1:  BSF    03.5
00D2:  BCF    1F.7
00D3:  BCF    03.5
00D4:  BSF    1F.0
....................  
.................... set_tris_b(0x01); 
00D5:  MOVLW  01
00D6:  BSF    03.5
00D7:  MOVWF  06
....................  
.................... delay_ms(2000); 
00D8:  MOVLW  08
00D9:  BCF    03.5
00DA:  MOVWF  25
00DB:  MOVLW  FA
00DC:  MOVWF  26
00DD:  CALL   004
00DE:  DECFSZ 25,F
00DF:  GOTO   0DB
....................  
.................... /* 
.................... if(input(pin_d6)==1) {}        // 1 numaralý anahtar açýk ise 
.................... else if(input(pin_d5)==1) {}   // 2 numaralý anahtar açýk ise 
.................... else if(input(pin_d4)==1) {}   // 3 numaralý anahtar açýk ise 
.................... */ 
....................  
.................... //anahtar 1 saga dönerek baþla 
....................  
.................... if(input(pin_d6)==1){ 
00E0:  BSF    03.5
00E1:  BSF    08.6
00E2:  BCF    03.5
00E3:  BTFSS  08.6
00E4:  GOTO   15F
.................... x=1; 
00E5:  MOVLW  01
00E6:  MOVWF  24
.................... while(TRUE){ 
....................  
.................... if(input(pin_b0)==0){ ileri(); delay_ms(700); x=3;} 
00E7:  BSF    03.5
00E8:  BSF    06.0
00E9:  BCF    03.5
00EA:  BTFSC  06.0
00EB:  GOTO   0F7
00EC:  CALL   045
00ED:  MOVLW  04
00EE:  MOVWF  25
00EF:  MOVLW  AF
00F0:  MOVWF  26
00F1:  CALL   004
00F2:  DECFSZ 25,F
00F3:  GOTO   0EF
00F4:  MOVLW  03
00F5:  MOVWF  24
.................... else if(input(pin_b1)==0){ geri(); delay_ms(700); x=0; } 
00F6:  GOTO   15D
00F7:  BSF    03.5
00F8:  BSF    06.1
00F9:  BCF    03.5
00FA:  BTFSC  06.1
00FB:  GOTO   106
00FC:  CALL   05D
00FD:  MOVLW  04
00FE:  MOVWF  25
00FF:  MOVLW  AF
0100:  MOVWF  26
0101:  CALL   004
0102:  DECFSZ 25,F
0103:  GOTO   0FF
0104:  CLRF   24
.................... else { 
0105:  GOTO   15D
....................  
.................... set_adc_channel(0); 
0106:  MOVLW  00
0107:  MOVWF  78
0108:  MOVF   1F,W
0109:  ANDLW  C7
010A:  IORWF  78,W
010B:  MOVWF  1F
.................... delay_us(10); 
010C:  MOVLW  10
010D:  MOVWF  77
010E:  DECFSZ 77,F
010F:  GOTO   10E
0110:  NOP
.................... on=read_adc(); 
0111:  BSF    1F.2
0112:  BTFSC  1F.2
0113:  GOTO   112
0114:  MOVF   1E,W
0115:  MOVWF  21
....................  
.................... set_adc_channel(1); 
0116:  MOVLW  08
0117:  MOVWF  78
0118:  MOVF   1F,W
0119:  ANDLW  C7
011A:  IORWF  78,W
011B:  MOVWF  1F
.................... delay_us(10); 
011C:  MOVLW  10
011D:  MOVWF  77
011E:  DECFSZ 77,F
011F:  GOTO   11E
0120:  NOP
.................... sa=read_adc(); 
0121:  BSF    1F.2
0122:  BTFSC  1F.2
0123:  GOTO   122
0124:  MOVF   1E,W
0125:  MOVWF  22
....................  
.................... set_adc_channel(2); 
0126:  MOVLW  10
0127:  MOVWF  78
0128:  MOVF   1F,W
0129:  ANDLW  C7
012A:  IORWF  78,W
012B:  MOVWF  1F
.................... delay_us(10); 
012C:  MOVLW  10
012D:  MOVWF  77
012E:  DECFSZ 77,F
012F:  GOTO   12E
0130:  NOP
.................... so=read_adc(); 
0131:  BSF    1F.2
0132:  BTFSC  1F.2
0133:  GOTO   132
0134:  MOVF   1E,W
0135:  MOVWF  23
....................  
.................... if(on>45){x=0; ileri();} 
0136:  MOVF   21,W
0137:  SUBLW  2D
0138:  BTFSC  03.0
0139:  GOTO   13D
013A:  CLRF   24
013B:  CALL   045
.................... else if(sa>45){x=1; sag();} 
013C:  GOTO   15D
013D:  MOVF   22,W
013E:  SUBLW  2D
013F:  BTFSC  03.0
0140:  GOTO   145
0141:  MOVLW  01
0142:  MOVWF  24
0143:  CALL   075
.................... else if(so>45){x=2; sol();} 
0144:  GOTO   15D
0145:  MOVF   23,W
0146:  SUBLW  2D
0147:  BTFSC  03.0
0148:  GOTO   14D
0149:  MOVLW  02
014A:  MOVWF  24
014B:  CALL   08F
.................... else { 
014C:  GOTO   15D
....................    if(x==0)ileri(); 
014D:  MOVF   24,F
014E:  BTFSS  03.2
014F:  GOTO   152
0150:  CALL   045
....................    else if(x==1)sag(); 
0151:  GOTO   15D
0152:  DECFSZ 24,W
0153:  GOTO   156
0154:  CALL   075
....................    else if(x==2) sol(); 
0155:  GOTO   15D
0156:  MOVF   24,W
0157:  SUBLW  02
0158:  BTFSS  03.2
0159:  GOTO   15C
015A:  CALL   08F
....................    else geri(); 
015B:  GOTO   15D
015C:  CALL   05D
....................     } 
.................... } 
.................... } 
015D:  GOTO   0E7
.................... } 
....................  
.................... //anahtar 2 sola dönerek baþla 
.................... else if(input(pin_d5)==1){ 
015E:  GOTO   25C
015F:  BSF    03.5
0160:  BSF    08.5
0161:  BCF    03.5
0162:  BTFSS  08.5
0163:  GOTO   1DE
.................... x=2; 
0164:  MOVLW  02
0165:  MOVWF  24
.................... while(TRUE){ 
....................  
.................... if(input(pin_b0)==0){ ileri(); delay_ms(700); x=3;} 
0166:  BSF    03.5
0167:  BSF    06.0
0168:  BCF    03.5
0169:  BTFSC  06.0
016A:  GOTO   176
016B:  CALL   045
016C:  MOVLW  04
016D:  MOVWF  25
016E:  MOVLW  AF
016F:  MOVWF  26
0170:  CALL   004
0171:  DECFSZ 25,F
0172:  GOTO   16E
0173:  MOVLW  03
0174:  MOVWF  24
.................... else if(input(pin_b1)==0){ geri(); delay_ms(700); x=0; } 
0175:  GOTO   1DC
0176:  BSF    03.5
0177:  BSF    06.1
0178:  BCF    03.5
0179:  BTFSC  06.1
017A:  GOTO   185
017B:  CALL   05D
017C:  MOVLW  04
017D:  MOVWF  25
017E:  MOVLW  AF
017F:  MOVWF  26
0180:  CALL   004
0181:  DECFSZ 25,F
0182:  GOTO   17E
0183:  CLRF   24
.................... else { 
0184:  GOTO   1DC
....................  
.................... set_adc_channel(0); 
0185:  MOVLW  00
0186:  MOVWF  78
0187:  MOVF   1F,W
0188:  ANDLW  C7
0189:  IORWF  78,W
018A:  MOVWF  1F
.................... delay_us(10); 
018B:  MOVLW  10
018C:  MOVWF  77
018D:  DECFSZ 77,F
018E:  GOTO   18D
018F:  NOP
.................... on=read_adc(); 
0190:  BSF    1F.2
0191:  BTFSC  1F.2
0192:  GOTO   191
0193:  MOVF   1E,W
0194:  MOVWF  21
....................  
.................... set_adc_channel(1); 
0195:  MOVLW  08
0196:  MOVWF  78
0197:  MOVF   1F,W
0198:  ANDLW  C7
0199:  IORWF  78,W
019A:  MOVWF  1F
.................... delay_us(10); 
019B:  MOVLW  10
019C:  MOVWF  77
019D:  DECFSZ 77,F
019E:  GOTO   19D
019F:  NOP
.................... sa=read_adc(); 
01A0:  BSF    1F.2
01A1:  BTFSC  1F.2
01A2:  GOTO   1A1
01A3:  MOVF   1E,W
01A4:  MOVWF  22
....................  
.................... set_adc_channel(2); 
01A5:  MOVLW  10
01A6:  MOVWF  78
01A7:  MOVF   1F,W
01A8:  ANDLW  C7
01A9:  IORWF  78,W
01AA:  MOVWF  1F
.................... delay_us(10); 
01AB:  MOVLW  10
01AC:  MOVWF  77
01AD:  DECFSZ 77,F
01AE:  GOTO   1AD
01AF:  NOP
.................... so=read_adc(); 
01B0:  BSF    1F.2
01B1:  BTFSC  1F.2
01B2:  GOTO   1B1
01B3:  MOVF   1E,W
01B4:  MOVWF  23
....................  
.................... if(on>45){x=0; ileri();} 
01B5:  MOVF   21,W
01B6:  SUBLW  2D
01B7:  BTFSC  03.0
01B8:  GOTO   1BC
01B9:  CLRF   24
01BA:  CALL   045
.................... else if(sa>45){x=1; sag();} 
01BB:  GOTO   1DC
01BC:  MOVF   22,W
01BD:  SUBLW  2D
01BE:  BTFSC  03.0
01BF:  GOTO   1C4
01C0:  MOVLW  01
01C1:  MOVWF  24
01C2:  CALL   075
.................... else if(so>45){x=2; sol();} 
01C3:  GOTO   1DC
01C4:  MOVF   23,W
01C5:  SUBLW  2D
01C6:  BTFSC  03.0
01C7:  GOTO   1CC
01C8:  MOVLW  02
01C9:  MOVWF  24
01CA:  CALL   08F
.................... else { 
01CB:  GOTO   1DC
....................    if(x==0)ileri(); 
01CC:  MOVF   24,F
01CD:  BTFSS  03.2
01CE:  GOTO   1D1
01CF:  CALL   045
....................    else if(x==1)sag(); 
01D0:  GOTO   1DC
01D1:  DECFSZ 24,W
01D2:  GOTO   1D5
01D3:  CALL   075
....................    else if(x==2) sol(); 
01D4:  GOTO   1DC
01D5:  MOVF   24,W
01D6:  SUBLW  02
01D7:  BTFSS  03.2
01D8:  GOTO   1DB
01D9:  CALL   08F
....................    else geri(); 
01DA:  GOTO   1DC
01DB:  CALL   05D
....................     } 
.................... } 
.................... } 
01DC:  GOTO   166
.................... } 
....................  
.................... //anahtar 3 geri giderek baþla 
.................... else if(input(pin_d4)==1){ 
01DD:  GOTO   25C
01DE:  BSF    03.5
01DF:  BSF    08.4
01E0:  BCF    03.5
01E1:  BTFSS  08.4
01E2:  GOTO   25C
.................... x=3; 
01E3:  MOVLW  03
01E4:  MOVWF  24
.................... while(TRUE){ 
....................  
.................... if(input(pin_b0)==0){ ileri(); delay_ms(700); x=3;} 
01E5:  BSF    03.5
01E6:  BSF    06.0
01E7:  BCF    03.5
01E8:  BTFSC  06.0
01E9:  GOTO   1F5
01EA:  CALL   045
01EB:  MOVLW  04
01EC:  MOVWF  25
01ED:  MOVLW  AF
01EE:  MOVWF  26
01EF:  CALL   004
01F0:  DECFSZ 25,F
01F1:  GOTO   1ED
01F2:  MOVLW  03
01F3:  MOVWF  24
.................... else if(input(pin_b1)==0){ geri(); delay_ms(700); x=0;} 
01F4:  GOTO   25B
01F5:  BSF    03.5
01F6:  BSF    06.1
01F7:  BCF    03.5
01F8:  BTFSC  06.1
01F9:  GOTO   204
01FA:  CALL   05D
01FB:  MOVLW  04
01FC:  MOVWF  25
01FD:  MOVLW  AF
01FE:  MOVWF  26
01FF:  CALL   004
0200:  DECFSZ 25,F
0201:  GOTO   1FD
0202:  CLRF   24
.................... else { 
0203:  GOTO   25B
....................  
.................... set_adc_channel(0); 
0204:  MOVLW  00
0205:  MOVWF  78
0206:  MOVF   1F,W
0207:  ANDLW  C7
0208:  IORWF  78,W
0209:  MOVWF  1F
.................... delay_us(10); 
020A:  MOVLW  10
020B:  MOVWF  77
020C:  DECFSZ 77,F
020D:  GOTO   20C
020E:  NOP
.................... on=read_adc(); 
020F:  BSF    1F.2
0210:  BTFSC  1F.2
0211:  GOTO   210
0212:  MOVF   1E,W
0213:  MOVWF  21
....................  
.................... set_adc_channel(1); 
0214:  MOVLW  08
0215:  MOVWF  78
0216:  MOVF   1F,W
0217:  ANDLW  C7
0218:  IORWF  78,W
0219:  MOVWF  1F
.................... delay_us(10); 
021A:  MOVLW  10
021B:  MOVWF  77
021C:  DECFSZ 77,F
021D:  GOTO   21C
021E:  NOP
.................... sa=read_adc(); 
021F:  BSF    1F.2
0220:  BTFSC  1F.2
0221:  GOTO   220
0222:  MOVF   1E,W
0223:  MOVWF  22
....................  
.................... set_adc_channel(2); 
0224:  MOVLW  10
0225:  MOVWF  78
0226:  MOVF   1F,W
0227:  ANDLW  C7
0228:  IORWF  78,W
0229:  MOVWF  1F
.................... delay_us(10); 
022A:  MOVLW  10
022B:  MOVWF  77
022C:  DECFSZ 77,F
022D:  GOTO   22C
022E:  NOP
.................... so=read_adc(); 
022F:  BSF    1F.2
0230:  BTFSC  1F.2
0231:  GOTO   230
0232:  MOVF   1E,W
0233:  MOVWF  23
....................  
.................... if(on>45){x=0; ileri();} 
0234:  MOVF   21,W
0235:  SUBLW  2D
0236:  BTFSC  03.0
0237:  GOTO   23B
0238:  CLRF   24
0239:  CALL   045
.................... else if(sa>45){x=1; sag();} 
023A:  GOTO   25B
023B:  MOVF   22,W
023C:  SUBLW  2D
023D:  BTFSC  03.0
023E:  GOTO   243
023F:  MOVLW  01
0240:  MOVWF  24
0241:  CALL   075
.................... else if(so>45){x=2; sol();} 
0242:  GOTO   25B
0243:  MOVF   23,W
0244:  SUBLW  2D
0245:  BTFSC  03.0
0246:  GOTO   24B
0247:  MOVLW  02
0248:  MOVWF  24
0249:  CALL   08F
.................... else { 
024A:  GOTO   25B
....................    if(x==0)ileri(); 
024B:  MOVF   24,F
024C:  BTFSS  03.2
024D:  GOTO   250
024E:  CALL   045
....................    else if(x==1)sag(); 
024F:  GOTO   25B
0250:  DECFSZ 24,W
0251:  GOTO   254
0252:  CALL   075
....................    else if(x==2) sol(); 
0253:  GOTO   25B
0254:  MOVF   24,W
0255:  SUBLW  02
0256:  BTFSS  03.2
0257:  GOTO   25A
0258:  CALL   08F
....................    else geri(); 
0259:  GOTO   25B
025A:  CALL   05D
....................     } 
.................... } 
.................... } 
025B:  GOTO   1E5
.................... } 
....................  
....................  
....................  
.................... } 
....................  
025C:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG
